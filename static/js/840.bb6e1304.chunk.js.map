{"version":3,"file":"static/js/840.bb6e1304.chunk.js","mappings":"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","sources":["data/topics.ts","config/appwrite.ts","utils/appwriteMigration.ts","services/appwriteService.ts","pages/AdminDashboard.tsx"],"sourcesContent":["import { Models } from 'appwrite';\n\nexport interface Topic extends Models.Document {\n    name: string;\n    slug: string;\n    subtopics?: Subtopic[];\n}\n\nexport interface Subtopic extends Models.Document {\n    $collectionId: string;\n    $databaseId: string;\n    $createdAt: string;\n    $updatedAt: string;\n    $permissions: string[];\n    name: string;\n    slug: string;\n    topicId: string;\n}\n\nconst topics: Topic[] = [\n    {\n        $id: 'number-systems',\n        name: 'Number Systems',\n        slug: 'number-systems',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'ns-1',\n                name: 'Natural numbers, integers, primes, etc.',\n                slug: 'natural-numbers',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-2',\n                name: 'Standard Form',\n                slug: 'standard-form',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-3',\n                name: 'Common factors, HCF, LCM',\n                slug: 'common-factors',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-4',\n                name: 'Four operations and brackets',\n                slug: 'four-operations',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-5',\n                name: 'Surds and rationalization',\n                slug: 'surds',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-6',\n                name: 'Decimals, fractions and percentages',\n                slug: 'decimals-fractions',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'algebraic-manipulation',\n        name: 'Algebraic Manipulation',\n        slug: 'algebraic-manipulation',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'am-1',\n                name: 'Rules for exponents, Indices',\n                slug: 'exponents-indices',\n                topicId: 'algebraic-manipulation',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'am-2',\n                name: 'Expansion of brackets',\n                slug: 'expansion-brackets',\n                topicId: 'algebraic-manipulation',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'am-3',\n                name: 'Factorisation techniques',\n                slug: 'factorisation',\n                topicId: 'algebraic-manipulation',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'mensuration',\n        name: 'Mensuration',\n        slug: 'mensuration',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'mns-1',\n                name: 'Units of Measurement',\n                slug: 'units-measurement',\n                topicId: 'mensuration',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'mns-2',\n                name: 'Perimeter and area of shapes',\n                slug: 'perimeter-area',\n                topicId: 'mensuration',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'mns-3',\n                name: 'Circle properties',\n                slug: 'circle-properties',\n                topicId: 'mensuration',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'linear-patterns',\n        name: 'Linear Patterns and Models',\n        slug: 'linear-patterns',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'lpm-1',\n                name: 'Linear equations',\n                slug: 'linear-equations',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'lpm-2',\n                name: 'Inequalities',\n                slug: 'inequalities',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'lpm-3',\n                name: 'Linear functions',\n                slug: 'linear-functions',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'lpm-4',\n                name: 'Simultaneous equations',\n                slug: 'simultaneous-equations',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'angles',\n        name: 'Angles',\n        slug: 'angles',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'ang-1',\n                name: 'Geometric terms and vocabulary',\n                slug: 'geometric-terms',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ang-2',\n                name: 'Measuring and drawing angles',\n                slug: 'measuring-angles',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ang-3',\n                name: 'Angle relationships',\n                slug: 'angle-relationships',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ang-4',\n                name: 'Pythagoras Theorem',\n                slug: 'pythagoras-theorem',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'trigonometry',\n        name: 'Trigonometry',\n        slug: 'trigonometry',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'trig-1',\n                name: 'Right-angled Trigonometry',\n                slug: 'right-angled-trigonometry',\n                topicId: 'trigonometry',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'trig-2',\n                name: 'Angles of elevation and depression',\n                slug: 'angles-elevation-depression',\n                topicId: 'trigonometry',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'trig-3',\n                name: 'Periodic Functions',\n                slug: 'periodic-functions',\n                topicId: 'trigonometry',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    }\n];\n\nexport default topics;\n","import { Client, Databases, Storage, ID } from 'appwrite';\r\n\r\n// Environment validation\r\nconst REQUIRED_ENV_VARS = {\r\n    ENDPOINT: 'https://cloud.appwrite.io/v1',\r\n    PROJECT_ID: '67eff58c0026f452ff3d'\r\n} as const;\r\n\r\n// Type definitions\r\nexport type DatabaseId = typeof DATABASE_IDS[keyof typeof DATABASE_IDS];\r\nexport type BucketId = typeof BUCKET_IDS[keyof typeof BUCKET_IDS];\r\nexport type CollectionId = typeof COLLECTION_IDS[keyof typeof COLLECTION_IDS];\r\n\r\n// Database IDs with descriptions\r\nexport const DATABASE_IDS = {\r\n    MATH_REVISION: '67f158d4000cb981963', // Main database for math content\r\n    ALGEBRATICA: 'algebraticamentede-db'   // Legacy database\r\n} as const;\r\n\r\n// Bucket IDs with descriptions\r\nexport const BUCKET_IDS = {\r\n    MATH_PDFS: '67f03c12001381e227aa',    // Storage for PDF files\r\n    MATH_VIDEOS: '67f03c7600242f02fd1a',   // Storage for video content\r\n    MATH_EXTERNAL: '67f03c7600242f02fd1a'  // Storage for external resources\r\n} as const;\r\n\r\n// Collection IDs with descriptions\r\nexport const COLLECTION_IDS = {\r\n    TOPICS: '67f158f50030e9e503ea',        // Main topics collection\r\n    SUBTOPICS: '67f159150030e9e503eb',     // Subtopics collection\r\n    RESOURCES: '67f159550030e9e503e9',      // Resources collection\r\n    PDFS: '67f159550030e9e503e9'           // Alias for resources collection\r\n} as const;\r\n\r\n// Configuration interface\r\ninterface AppwriteConfig {\r\n    readonly endpoint: string;\r\n    readonly projectId: string;\r\n    readonly databaseId: DatabaseId;\r\n    readonly bucketId: BucketId;\r\n    readonly topicsCollectionId: CollectionId;\r\n    readonly subtopicsCollectionId: CollectionId;\r\n    readonly resourcesCollectionId: CollectionId;\r\n}\r\n\r\n// Main configuration object\r\nconst config: AppwriteConfig = {\r\n    endpoint: REQUIRED_ENV_VARS.ENDPOINT,\r\n    projectId: REQUIRED_ENV_VARS.PROJECT_ID,\r\n    databaseId: DATABASE_IDS.MATH_REVISION,\r\n    bucketId: BUCKET_IDS.MATH_PDFS,\r\n    topicsCollectionId: COLLECTION_IDS.TOPICS,\r\n    subtopicsCollectionId: COLLECTION_IDS.SUBTOPICS,\r\n    resourcesCollectionId: COLLECTION_IDS.RESOURCES\r\n} as const;\r\n\r\n// Initialize Appwrite client\r\nconst client = new Client()\r\n    .setEndpoint(config.endpoint)\r\n    .setProject(config.projectId);\r\n\r\n// Export initialized services\r\nexport const databases = new Databases(client);\r\nexport const storage = new Storage(client);\r\n\r\n// Helper functions\r\nexport const getFilePreviewUrl = (fileId: string): string => {\r\n    return storage.getFilePreview(config.bucketId, fileId).toString();\r\n};\r\n\r\nexport const getFileViewUrl = (fileId: string): string => {\r\n    return storage.getFileView(config.bucketId, fileId).toString();\r\n};\r\n\r\nexport const generateUniqueId = (): string => {\r\n    return ID.unique();\r\n};\r\n\r\nexport default config; ","import { AppwriteService } from '../services/appwriteService';\r\nimport topics from '../data/topics';\r\n\r\ninterface MigrationTopic {\r\n    name: string;\r\n    slug: string;\r\n    subtopics: MigrationSubtopic[];\r\n}\r\n\r\ninterface MigrationSubtopic {\r\n    name: string;\r\n    slug: string;\r\n    resources: MigrationResource[];\r\n}\r\n\r\ninterface MigrationResource {\r\n    title: string;\r\n    fileId: string;\r\n    resourceType: 'question' | 'answer' | 'reference' | 'video';\r\n}\r\n\r\nexport interface MigrationResult {\r\n    success: boolean;\r\n    message: string;\r\n    stats: {\r\n        topics: number;\r\n        subtopics: number;\r\n        resources: number;\r\n        failed: number;\r\n    };\r\n}\r\n\r\nexport async function migrateTopics(): Promise<MigrationResult> {\r\n    const stats = {\r\n        topics: 0,\r\n        subtopics: 0,\r\n        resources: 0,\r\n        failed: 0\r\n    };\r\n\r\n    try {\r\n        // Migrate topics and their subtopics\r\n        for (const topic of topics) {\r\n            try {\r\n                // Create topic\r\n                await AppwriteService.createTopic({\r\n                    name: topic.name,\r\n                    slug: topic.slug\r\n                });\r\n                stats.topics++;\r\n\r\n                // Create subtopics for this topic\r\n                if (topic.subtopics) {\r\n                    for (const subtopic of topic.subtopics) {\r\n                        try {\r\n                            await AppwriteService.createSubtopic({\r\n                                name: subtopic.name,\r\n                                slug: subtopic.slug,\r\n                                topicId: topic.$id\r\n                            });\r\n                            stats.subtopics++;\r\n                        } catch (error) {\r\n                            console.error(`Failed to create subtopic ${subtopic.name}:`, error);\r\n                            stats.failed++;\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(`Failed to create topic ${topic.name}:`, error);\r\n                stats.failed++;\r\n            }\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: 'Migration completed successfully',\r\n            stats\r\n        };\r\n    } catch (error) {\r\n        console.error('Migration failed:', error);\r\n        return {\r\n            success: false,\r\n            message: error instanceof Error ? error.message : 'Migration failed',\r\n            stats\r\n        };\r\n    }\r\n}\r\n\r\nexport const migrateContent = async (): Promise<MigrationResult> => {\r\n    const migratedCount = {\r\n        topics: 0,\r\n        subtopics: 0,\r\n        resources: 0\r\n    };\r\n\r\n    try {\r\n        const topics: MigrationTopic[] = []; // Replace with your actual data source\r\n\r\n        for (const topic of topics) {\r\n            try {\r\n                const topicDoc = await AppwriteService.createTopic({\r\n                    name: topic.name,\r\n                    slug: topic.slug\r\n                });\r\n\r\n                migratedCount.topics++;\r\n\r\n                for (const subtopic of topic.subtopics) {\r\n                    try {\r\n                        const subtopicDoc = await AppwriteService.createSubtopic({\r\n                            name: subtopic.name,\r\n                            slug: subtopic.slug,\r\n                            topicId: topicDoc.$id\r\n                        });\r\n\r\n                        migratedCount.subtopics++;\r\n\r\n                        for (const resource of subtopic.resources) {\r\n                            try {\r\n                                await AppwriteService.createResource({\r\n                                    title: resource.title,\r\n                                    fileId: resource.fileId,\r\n                                    subtopicId: subtopicDoc.$id,\r\n                                    resourceType: resource.resourceType\r\n                                });\r\n\r\n                                migratedCount.resources++;\r\n                            } catch (error) {\r\n                                console.error(`Failed to migrate resource ${resource.title}:`, error);\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(`Failed to migrate subtopic ${subtopic.name}:`, error);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(`Failed to migrate topic ${topic.name}:`, error);\r\n            }\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: `Migration completed successfully. Migrated ${migratedCount.topics} topics, ${migratedCount.subtopics} subtopics, and ${migratedCount.resources} resources.`,\r\n            stats: {\r\n                topics: migratedCount.topics,\r\n                subtopics: migratedCount.subtopics,\r\n                resources: migratedCount.resources,\r\n                failed: 0\r\n            }\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            message: `Migration failed: ${error instanceof Error ? error.message : 'Unknown error occurred'}`,\r\n            stats: {\r\n                topics: 0,\r\n                subtopics: 0,\r\n                resources: 0,\r\n                failed: 1\r\n            }\r\n        };\r\n    }\r\n}; ","import { Client, Databases, Storage, ID, Models, Query } from 'appwrite';\r\nimport config from '../config/appwrite';\r\nimport { MigrationResult, migrateTopics } from '../utils/appwriteMigration';\r\n\r\nconst client = new Client()\r\n    .setEndpoint(config.endpoint)\r\n    .setProject(config.projectId);\r\n\r\nconst databases = new Databases(client);\r\nconst storage = new Storage(client);\r\n\r\ninterface Topic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n}\r\n\r\ninterface Subtopic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n    topicId: string;\r\n}\r\n\r\ninterface Resource extends Models.Document {\r\n    title: string;\r\n    fileId: string;\r\n    subtopicId: string;\r\n    resourceType: 'question' | 'answer' | 'reference' | 'video';\r\n}\r\n\r\nexport const AppwriteService = {\r\n    async getTopics(): Promise<Topic[]> {\r\n        try {\r\n            const response = await databases.listDocuments(\r\n                config.databaseId,\r\n                config.topicsCollectionId\r\n            );\r\n            return response.documents as Topic[];\r\n        } catch (err) {\r\n            console.error('Error fetching topics:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getTopic(topicId: string): Promise<Topic> {\r\n        try {\r\n            const response = await databases.getDocument(\r\n                config.databaseId,\r\n                config.topicsCollectionId,\r\n                topicId\r\n            );\r\n            return response as Topic;\r\n        } catch (err) {\r\n            console.error('Error fetching topic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async createTopic(data: { name: string; slug: string }): Promise<Topic> {\r\n        try {\r\n            const response = await databases.createDocument(\r\n                config.databaseId,\r\n                config.topicsCollectionId,\r\n                ID.unique(),\r\n                data\r\n            );\r\n            return response as Topic;\r\n        } catch (err) {\r\n            console.error('Error creating topic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getSubtopicsByTopic(topicId: string): Promise<Subtopic[]> {\r\n        try {\r\n            const response = await databases.listDocuments(\r\n                config.databaseId,\r\n                config.subtopicsCollectionId,\r\n                [Query.equal('topicId', topicId)]\r\n            );\r\n            return response.documents as Subtopic[];\r\n        } catch (err) {\r\n            console.error('Error fetching subtopics:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getSubtopic(subtopicId: string): Promise<Subtopic> {\r\n        try {\r\n            const response = await databases.getDocument(\r\n                config.databaseId,\r\n                config.subtopicsCollectionId,\r\n                subtopicId\r\n            );\r\n            return response as Subtopic;\r\n        } catch (err) {\r\n            console.error('Error fetching subtopic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async createSubtopic(data: { name: string; slug: string; topicId: string }): Promise<Subtopic> {\r\n        try {\r\n            const response = await databases.createDocument(\r\n                config.databaseId,\r\n                config.subtopicsCollectionId,\r\n                ID.unique(),\r\n                data\r\n            );\r\n            return response as Subtopic;\r\n        } catch (err) {\r\n            console.error('Error creating subtopic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getResourcesBySubtopic(subtopicId: string): Promise<Resource[]> {\r\n        try {\r\n            const response = await databases.listDocuments(\r\n                config.databaseId,\r\n                config.resourcesCollectionId,\r\n                [Query.equal('subtopicId', subtopicId)]\r\n            );\r\n            return response.documents as Resource[];\r\n        } catch (err) {\r\n            console.error('Error fetching resources:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async createResource(data: {\r\n        title: string;\r\n        subtopicId: string;\r\n        resourceType: Resource['resourceType'];\r\n        fileId: string;\r\n    }): Promise<Resource> {\r\n        try {\r\n            const response = await databases.createDocument(\r\n                config.databaseId,\r\n                config.resourcesCollectionId,\r\n                ID.unique(),\r\n                data\r\n            );\r\n            return response as Resource;\r\n        } catch (err) {\r\n            console.error('Error creating resource:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async uploadFile(file: File): Promise<string> {\r\n        try {\r\n            const response = await storage.createFile(\r\n                config.bucketId,\r\n                ID.unique(),\r\n                file\r\n            );\r\n            return response.$id;\r\n        } catch (err) {\r\n            console.error('Error uploading file:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async deleteFile(fileId: string): Promise<void> {\r\n        try {\r\n            await storage.deleteFile(config.bucketId, fileId);\r\n        } catch (err) {\r\n            console.error('Error deleting file:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    getFileView(fileId: string): string {\r\n        return storage.getFileView(config.bucketId, fileId).toString();\r\n    },\r\n\r\n    async migrateContent(): Promise<MigrationResult> {\r\n        try {\r\n            return await migrateTopics();\r\n        } catch (error) {\r\n            console.error('Migration failed:', error);\r\n            return {\r\n                success: false,\r\n                message: error instanceof Error ? error.message : 'Migration failed',\r\n                stats: {\r\n                    topics: 0,\r\n                    subtopics: 0,\r\n                    resources: 0,\r\n                    failed: 1\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default AppwriteService; ","import React, { useEffect, useState } from 'react';\r\nimport { Models } from 'appwrite';\r\nimport { AppwriteService } from '../services/appwriteService';\r\nimport { MigrationResult } from '../utils/appwriteMigration';\r\n\r\ninterface Topic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n}\r\n\r\ninterface Subtopic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n    topicId: string;\r\n}\r\n\r\nexport const AdminDashboard: React.FC = () => {\r\n    const [topics, setTopics] = useState<Topic[]>([]);\r\n    const [selectedTopic, setSelectedTopic] = useState<string>('');\r\n    const [subtopics, setSubtopics] = useState<Subtopic[]>([]);\r\n    const [newTopic, setNewTopic] = useState('');\r\n    const [newSubtopic, setNewSubtopic] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [migrationStatus, setMigrationStatus] = useState<MigrationResult | null>(null);\r\n\r\n    useEffect(() => {\r\n        fetchTopics();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedTopic) {\r\n            fetchSubtopics(selectedTopic);\r\n        } else {\r\n            setSubtopics([]);\r\n        }\r\n    }, [selectedTopic]);\r\n\r\n    const fetchTopics = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const fetchedTopics = await AppwriteService.getTopics();\r\n            setTopics(fetchedTopics);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Error fetching topics:', err);\r\n            setError('Failed to load topics. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchSubtopics = async (topicId: string) => {\r\n        try {\r\n            const fetchedSubtopics = await AppwriteService.getSubtopicsByTopic(topicId);\r\n            setSubtopics(fetchedSubtopics);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Error fetching subtopics:', err);\r\n            setError('Failed to load subtopics. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const generateSlug = (name: string): string => {\r\n        return name\r\n            .toLowerCase()\r\n            .replace(/[^a-z0-9]+/g, '-')\r\n            .replace(/(^-|-$)/g, '');\r\n    };\r\n\r\n    const handleCreateTopic = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!newTopic.trim()) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            await AppwriteService.createTopic({\r\n                name: newTopic.trim(),\r\n                slug: generateSlug(newTopic)\r\n            });\r\n            setNewTopic('');\r\n            await fetchTopics();\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Error creating topic:', err);\r\n            setError('Failed to create topic. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateSubtopic = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!newSubtopic.trim() || !selectedTopic) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            await AppwriteService.createSubtopic({\r\n                name: newSubtopic.trim(),\r\n                slug: generateSlug(newSubtopic),\r\n                topicId: selectedTopic\r\n            });\r\n            setNewSubtopic('');\r\n            await fetchSubtopics(selectedTopic);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Error creating subtopic:', err);\r\n            setError('Failed to create subtopic. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleMigration = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const result = await AppwriteService.migrateContent();\r\n            setMigrationStatus(result);\r\n        } catch (error) {\r\n            console.error('Migration failed:', error);\r\n            setMigrationStatus({\r\n                success: false,\r\n                message: error instanceof Error ? error.message : 'Migration failed',\r\n                stats: {\r\n                    topics: 0,\r\n                    subtopics: 0,\r\n                    resources: 0,\r\n                    failed: 1\r\n                }\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading && topics.length === 0) {\r\n        return (\r\n            <div className=\"flex justify-center items-center h-48\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            <div>\r\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Admin Dashboard</h1>\r\n                {error && (\r\n                    <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-6\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"grid gap-8 md:grid-cols-2\">\r\n                <section className=\"space-y-6\">\r\n                    <h2 className=\"text-xl font-semibold text-gray-900\">Create New Topic</h2>\r\n                    <form onSubmit={handleCreateTopic} className=\"space-y-4\">\r\n                        <div>\r\n                            <label htmlFor=\"topicName\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Topic Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"topicName\"\r\n                                value={newTopic}\r\n                                onChange={(e) => setNewTopic(e.target.value)}\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                                placeholder=\"Enter topic name\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={loading}\r\n                            className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50\"\r\n                        >\r\n                            {loading ? 'Creating...' : 'Create Topic'}\r\n                        </button>\r\n                    </form>\r\n                </section>\r\n\r\n                <section className=\"space-y-6\">\r\n                    <h2 className=\"text-xl font-semibold text-gray-900\">Create New Subtopic</h2>\r\n                    <form onSubmit={handleCreateSubtopic} className=\"space-y-4\">\r\n                        <div>\r\n                            <label htmlFor=\"topicSelect\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Select Topic\r\n                            </label>\r\n                            <select\r\n                                id=\"topicSelect\"\r\n                                value={selectedTopic}\r\n                                onChange={(e) => setSelectedTopic(e.target.value)}\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select a topic</option>\r\n                                {topics.map(topic => (\r\n                                    <option key={topic.$id} value={topic.$id}>\r\n                                        {topic.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"subtopicName\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Subtopic Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"subtopicName\"\r\n                                value={newSubtopic}\r\n                                onChange={(e) => setNewSubtopic(e.target.value)}\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                                placeholder=\"Enter subtopic name\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={loading || !selectedTopic}\r\n                            className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50\"\r\n                        >\r\n                            {loading ? 'Creating...' : 'Create Subtopic'}\r\n                        </button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n\r\n            {selectedTopic && (\r\n                <section className=\"space-y-4\">\r\n                    <h2 className=\"text-xl font-semibold text-gray-900\">Current Subtopics</h2>\r\n                    {subtopics.length === 0 ? (\r\n                        <p className=\"text-gray-600\">No subtopics available for this topic yet.</p>\r\n                    ) : (\r\n                        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n                            {subtopics.map(subtopic => (\r\n                                <div\r\n                                    key={subtopic.$id}\r\n                                    className=\"p-4 bg-white rounded-lg shadow border border-gray-200\"\r\n                                >\r\n                                    <h3 className=\"font-medium text-gray-900\">{subtopic.name}</h3>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </section>\r\n            )}\r\n\r\n            <div className=\"bg-white rounded-lg shadow p-6 mb-8\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Content Migration</h2>\r\n                <button\r\n                    onClick={handleMigration}\r\n                    disabled={loading}\r\n                    className={`px-4 py-2 rounded ${\r\n                        loading\r\n                            ? 'bg-gray-400 cursor-not-allowed'\r\n                            : 'bg-blue-500 hover:bg-blue-600'\r\n                    } text-white font-medium transition-colors`}\r\n                >\r\n                    {loading ? 'Migrating...' : 'Start Migration'}\r\n                </button>\r\n\r\n                {migrationStatus && (\r\n                    <div className={`mt-4 p-4 rounded ${\r\n                        migrationStatus.success ? 'bg-green-50' : 'bg-red-50'\r\n                    }`}>\r\n                        <p className={`font-medium ${\r\n                            migrationStatus.success ? 'text-green-800' : 'text-red-800'\r\n                        }`}>\r\n                            {migrationStatus.success ? 'Success!' : 'Error'}\r\n                        </p>\r\n                        <p className=\"text-gray-600 mt-1\">{migrationStatus.message}</p>\r\n                        {migrationStatus.stats && (\r\n                            <div className=\"mt-2\">\r\n                                <p className=\"text-sm text-gray-600\">Migration Stats:</p>\r\n                                <ul className=\"list-disc list-inside mt-1 text-sm text-gray-600\">\r\n                                    <li>Topics: {migrationStatus.stats.topics}</li>\r\n                                    <li>Subtopics: {migrationStatus.stats.subtopics}</li>\r\n                                    <li>Resources: {migrationStatus.stats.resources}</li>\r\n                                    <li>Failed: {migrationStatus.stats.failed}</li>\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard; "],"names":["$id","name","slug","$collectionId","$databaseId","$createdAt","Date","toISOString","$updatedAt","$permissions","subtopics","topicId","config","endpoint","projectId","databaseId","bucketId","topicsCollectionId","subtopicsCollectionId","resourcesCollectionId","client","Client","setEndpoint","setProject","Databases","Storage","databases","storage","AppwriteService","getTopics","listDocuments","documents","err","console","error","getTopic","getDocument","createTopic","data","createDocument","ID","unique","getSubtopicsByTopic","Query","equal","getSubtopic","subtopicId","createSubtopic","getResourcesBySubtopic","createResource","uploadFile","file","createFile","deleteFile","fileId","getFileView","toString","migrateContent","async","stats","topics","resources","failed","topic","subtopic","success","message","Error","migrateTopics","AdminDashboard","setTopics","useState","selectedTopic","setSelectedTopic","setSubtopics","newTopic","setNewTopic","newSubtopic","setNewSubtopic","loading","setLoading","setError","migrationStatus","setMigrationStatus","useEffect","fetchTopics","fetchSubtopics","fetchedTopics","fetchedSubtopics","generateSlug","toLowerCase","replace","length","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","trim","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","map","onClick","result"],"sourceRoot":""}