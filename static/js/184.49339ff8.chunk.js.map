{"version":3,"file":"static/js/184.49339ff8.chunk.js","mappings":"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","sources":["pages/SubtopicList.tsx","data/topics.ts","config/appwrite.ts","utils/appwriteMigration.ts","services/appwriteService.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Models } from 'appwrite';\r\nimport { AppwriteService } from '../services/appwriteService';\r\n\r\ninterface Topic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n}\r\n\r\ninterface Subtopic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n    topicId: string;\r\n}\r\n\r\nexport const SubtopicList: React.FC = () => {\r\n    const { topicId } = useParams<{ topicId: string }>();\r\n    const [topic, setTopic] = useState<Topic | null>(null);\r\n    const [subtopics, setSubtopics] = useState<Subtopic[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (!topicId) return;\r\n\r\n            try {\r\n                setLoading(true);\r\n                const [fetchedTopic, fetchedSubtopics] = await Promise.all([\r\n                    AppwriteService.getTopic(topicId),\r\n                    AppwriteService.getSubtopicsByTopic(topicId)\r\n                ]);\r\n                setTopic(fetchedTopic);\r\n                setSubtopics(fetchedSubtopics);\r\n                setError(null);\r\n            } catch (err) {\r\n                console.error('Error fetching data:', err);\r\n                setError('Failed to load content. Please try again later.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [topicId]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex justify-center items-center h-48\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error || !topic) {\r\n        return (\r\n            <div className=\"text-center py-8\">\r\n                <div className=\"text-red-500 mb-4\">{error || 'Topic not found'}</div>\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                >\r\n                    Return to Topics\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-8\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"text-blue-500 hover:text-blue-600 flex items-center\"\r\n                >\r\n                    <svg\r\n                        className=\"w-4 h-4 mr-2\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M15 19l-7-7 7-7\"\r\n                        />\r\n                    </svg>\r\n                    Back to Topics\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mb-8\">\r\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">{topic.name}</h1>\r\n                <p className=\"text-gray-600\">Select a subtopic to view resources</p>\r\n            </div>\r\n\r\n            {subtopics.length === 0 ? (\r\n                <div className=\"text-center py-8 text-gray-600\">\r\n                    No subtopics available for this topic yet.\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n                    {subtopics.map(subtopic => (\r\n                        <Link\r\n                            key={subtopic.$id}\r\n                            to={`/subtopic/${subtopic.$id}`}\r\n                            className=\"block p-6 bg-white rounded-lg shadow hover:shadow-md transition-shadow border border-gray-200\"\r\n                        >\r\n                            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                                {subtopic.name}\r\n                            </h2>\r\n                            <p className=\"text-gray-600\">\r\n                                View questions, answers, and resources\r\n                            </p>\r\n                            <div className=\"mt-4 flex items-center text-blue-600\">\r\n                                <span className=\"text-sm\">View resources</span>\r\n                                <svg\r\n                                    className=\"w-4 h-4 ml-2\"\r\n                                    fill=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        strokeWidth={2}\r\n                                        d=\"M9 5l7 7-7 7\"\r\n                                    />\r\n                                </svg>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubtopicList; ","import { Models } from 'appwrite';\n\nexport interface Topic extends Models.Document {\n    name: string;\n    slug: string;\n    subtopics?: Subtopic[];\n}\n\nexport interface Subtopic extends Models.Document {\n    $collectionId: string;\n    $databaseId: string;\n    $createdAt: string;\n    $updatedAt: string;\n    $permissions: string[];\n    name: string;\n    slug: string;\n    topicId: string;\n}\n\nconst topics: Topic[] = [\n    {\n        $id: 'number-systems',\n        name: 'Number Systems',\n        slug: 'number-systems',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'ns-1',\n                name: 'Natural numbers, integers, primes, etc.',\n                slug: 'natural-numbers',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-2',\n                name: 'Standard Form',\n                slug: 'standard-form',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-3',\n                name: 'Common factors, HCF, LCM',\n                slug: 'common-factors',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-4',\n                name: 'Four operations and brackets',\n                slug: 'four-operations',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-5',\n                name: 'Surds and rationalization',\n                slug: 'surds',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ns-6',\n                name: 'Decimals, fractions and percentages',\n                slug: 'decimals-fractions',\n                topicId: 'number-systems',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'algebraic-manipulation',\n        name: 'Algebraic Manipulation',\n        slug: 'algebraic-manipulation',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'am-1',\n                name: 'Rules for exponents, Indices',\n                slug: 'exponents-indices',\n                topicId: 'algebraic-manipulation',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'am-2',\n                name: 'Expansion of brackets',\n                slug: 'expansion-brackets',\n                topicId: 'algebraic-manipulation',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'am-3',\n                name: 'Factorisation techniques',\n                slug: 'factorisation',\n                topicId: 'algebraic-manipulation',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'mensuration',\n        name: 'Mensuration',\n        slug: 'mensuration',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'mns-1',\n                name: 'Units of Measurement',\n                slug: 'units-measurement',\n                topicId: 'mensuration',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'mns-2',\n                name: 'Perimeter and area of shapes',\n                slug: 'perimeter-area',\n                topicId: 'mensuration',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'mns-3',\n                name: 'Circle properties',\n                slug: 'circle-properties',\n                topicId: 'mensuration',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'linear-patterns',\n        name: 'Linear Patterns and Models',\n        slug: 'linear-patterns',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'lpm-1',\n                name: 'Linear equations',\n                slug: 'linear-equations',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'lpm-2',\n                name: 'Inequalities',\n                slug: 'inequalities',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'lpm-3',\n                name: 'Linear functions',\n                slug: 'linear-functions',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'lpm-4',\n                name: 'Simultaneous equations',\n                slug: 'simultaneous-equations',\n                topicId: 'linear-patterns',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'angles',\n        name: 'Angles',\n        slug: 'angles',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'ang-1',\n                name: 'Geometric terms and vocabulary',\n                slug: 'geometric-terms',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ang-2',\n                name: 'Measuring and drawing angles',\n                slug: 'measuring-angles',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ang-3',\n                name: 'Angle relationships',\n                slug: 'angle-relationships',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'ang-4',\n                name: 'Pythagoras Theorem',\n                slug: 'pythagoras-theorem',\n                topicId: 'angles',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    },\n    {\n        $id: 'trigonometry',\n        name: 'Trigonometry',\n        slug: 'trigonometry',\n        $collectionId: 'topics',\n        $databaseId: 'database',\n        $createdAt: new Date().toISOString(),\n        $updatedAt: new Date().toISOString(),\n        $permissions: [],\n        subtopics: [\n            {\n                $id: 'trig-1',\n                name: 'Right-angled Trigonometry',\n                slug: 'right-angled-trigonometry',\n                topicId: 'trigonometry',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'trig-2',\n                name: 'Angles of elevation and depression',\n                slug: 'angles-elevation-depression',\n                topicId: 'trigonometry',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            },\n            {\n                $id: 'trig-3',\n                name: 'Periodic Functions',\n                slug: 'periodic-functions',\n                topicId: 'trigonometry',\n                $collectionId: 'subtopics',\n                $databaseId: 'database',\n                $createdAt: new Date().toISOString(),\n                $updatedAt: new Date().toISOString(),\n                $permissions: []\n            }\n        ]\n    }\n];\n\nexport default topics;\n","import { Client, Databases, Storage, ID } from 'appwrite';\r\n\r\n// Environment validation\r\nconst REQUIRED_ENV_VARS = {\r\n    ENDPOINT: 'https://cloud.appwrite.io/v1',\r\n    PROJECT_ID: '67eff58c0026f452ff3d'\r\n} as const;\r\n\r\n// Type definitions\r\nexport type DatabaseId = typeof DATABASE_IDS[keyof typeof DATABASE_IDS];\r\nexport type BucketId = typeof BUCKET_IDS[keyof typeof BUCKET_IDS];\r\nexport type CollectionId = typeof COLLECTION_IDS[keyof typeof COLLECTION_IDS];\r\n\r\n// Database IDs with descriptions\r\nexport const DATABASE_IDS = {\r\n    MATH_REVISION: '67f158d4000cb981963', // Main database for math content\r\n    ALGEBRATICA: 'algebraticamentede-db'   // Legacy database\r\n} as const;\r\n\r\n// Bucket IDs with descriptions\r\nexport const BUCKET_IDS = {\r\n    MATH_PDFS: '67f03c12001381e227aa',    // Storage for PDF files\r\n    MATH_VIDEOS: '67f03c7600242f02fd1a',   // Storage for video content\r\n    MATH_EXTERNAL: '67f03c7600242f02fd1a'  // Storage for external resources\r\n} as const;\r\n\r\n// Collection IDs with descriptions\r\nexport const COLLECTION_IDS = {\r\n    TOPICS: '67f158f50030e9e503ea',        // Main topics collection\r\n    SUBTOPICS: '67f159150030e9e503eb',     // Subtopics collection\r\n    RESOURCES: '67f159550030e9e503e9',      // Resources collection\r\n    PDFS: '67f159550030e9e503e9'           // Alias for resources collection\r\n} as const;\r\n\r\n// Configuration interface\r\ninterface AppwriteConfig {\r\n    readonly endpoint: string;\r\n    readonly projectId: string;\r\n    readonly databaseId: DatabaseId;\r\n    readonly bucketId: BucketId;\r\n    readonly topicsCollectionId: CollectionId;\r\n    readonly subtopicsCollectionId: CollectionId;\r\n    readonly resourcesCollectionId: CollectionId;\r\n}\r\n\r\n// Main configuration object\r\nconst config: AppwriteConfig = {\r\n    endpoint: REQUIRED_ENV_VARS.ENDPOINT,\r\n    projectId: REQUIRED_ENV_VARS.PROJECT_ID,\r\n    databaseId: DATABASE_IDS.MATH_REVISION,\r\n    bucketId: BUCKET_IDS.MATH_PDFS,\r\n    topicsCollectionId: COLLECTION_IDS.TOPICS,\r\n    subtopicsCollectionId: COLLECTION_IDS.SUBTOPICS,\r\n    resourcesCollectionId: COLLECTION_IDS.RESOURCES\r\n} as const;\r\n\r\n// Initialize Appwrite client\r\nconst client = new Client()\r\n    .setEndpoint(config.endpoint)\r\n    .setProject(config.projectId);\r\n\r\n// Export initialized services\r\nexport const databases = new Databases(client);\r\nexport const storage = new Storage(client);\r\n\r\n// Helper functions\r\nexport const getFilePreviewUrl = (fileId: string): string => {\r\n    return storage.getFilePreview(config.bucketId, fileId).toString();\r\n};\r\n\r\nexport const getFileViewUrl = (fileId: string): string => {\r\n    return storage.getFileView(config.bucketId, fileId).toString();\r\n};\r\n\r\nexport const generateUniqueId = (): string => {\r\n    return ID.unique();\r\n};\r\n\r\nexport default config; ","import { AppwriteService } from '../services/appwriteService';\r\nimport topics from '../data/topics';\r\n\r\ninterface MigrationTopic {\r\n    name: string;\r\n    slug: string;\r\n    subtopics: MigrationSubtopic[];\r\n}\r\n\r\ninterface MigrationSubtopic {\r\n    name: string;\r\n    slug: string;\r\n    resources: MigrationResource[];\r\n}\r\n\r\ninterface MigrationResource {\r\n    title: string;\r\n    fileId: string;\r\n    resourceType: 'question' | 'answer' | 'reference' | 'video';\r\n}\r\n\r\nexport interface MigrationResult {\r\n    success: boolean;\r\n    message: string;\r\n    stats: {\r\n        topics: number;\r\n        subtopics: number;\r\n        resources: number;\r\n        failed: number;\r\n    };\r\n}\r\n\r\nexport async function migrateTopics(): Promise<MigrationResult> {\r\n    const stats = {\r\n        topics: 0,\r\n        subtopics: 0,\r\n        resources: 0,\r\n        failed: 0\r\n    };\r\n\r\n    try {\r\n        // Migrate topics and their subtopics\r\n        for (const topic of topics) {\r\n            try {\r\n                // Create topic\r\n                await AppwriteService.createTopic({\r\n                    name: topic.name,\r\n                    slug: topic.slug\r\n                });\r\n                stats.topics++;\r\n\r\n                // Create subtopics for this topic\r\n                if (topic.subtopics) {\r\n                    for (const subtopic of topic.subtopics) {\r\n                        try {\r\n                            await AppwriteService.createSubtopic({\r\n                                name: subtopic.name,\r\n                                slug: subtopic.slug,\r\n                                topicId: topic.$id\r\n                            });\r\n                            stats.subtopics++;\r\n                        } catch (error) {\r\n                            console.error(`Failed to create subtopic ${subtopic.name}:`, error);\r\n                            stats.failed++;\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(`Failed to create topic ${topic.name}:`, error);\r\n                stats.failed++;\r\n            }\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: 'Migration completed successfully',\r\n            stats\r\n        };\r\n    } catch (error) {\r\n        console.error('Migration failed:', error);\r\n        return {\r\n            success: false,\r\n            message: error instanceof Error ? error.message : 'Migration failed',\r\n            stats\r\n        };\r\n    }\r\n}\r\n\r\nexport const migrateContent = async (): Promise<MigrationResult> => {\r\n    const migratedCount = {\r\n        topics: 0,\r\n        subtopics: 0,\r\n        resources: 0\r\n    };\r\n\r\n    try {\r\n        const topics: MigrationTopic[] = []; // Replace with your actual data source\r\n\r\n        for (const topic of topics) {\r\n            try {\r\n                const topicDoc = await AppwriteService.createTopic({\r\n                    name: topic.name,\r\n                    slug: topic.slug\r\n                });\r\n\r\n                migratedCount.topics++;\r\n\r\n                for (const subtopic of topic.subtopics) {\r\n                    try {\r\n                        const subtopicDoc = await AppwriteService.createSubtopic({\r\n                            name: subtopic.name,\r\n                            slug: subtopic.slug,\r\n                            topicId: topicDoc.$id\r\n                        });\r\n\r\n                        migratedCount.subtopics++;\r\n\r\n                        for (const resource of subtopic.resources) {\r\n                            try {\r\n                                await AppwriteService.createResource({\r\n                                    title: resource.title,\r\n                                    fileId: resource.fileId,\r\n                                    subtopicId: subtopicDoc.$id,\r\n                                    resourceType: resource.resourceType\r\n                                });\r\n\r\n                                migratedCount.resources++;\r\n                            } catch (error) {\r\n                                console.error(`Failed to migrate resource ${resource.title}:`, error);\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(`Failed to migrate subtopic ${subtopic.name}:`, error);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(`Failed to migrate topic ${topic.name}:`, error);\r\n            }\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            message: `Migration completed successfully. Migrated ${migratedCount.topics} topics, ${migratedCount.subtopics} subtopics, and ${migratedCount.resources} resources.`,\r\n            stats: {\r\n                topics: migratedCount.topics,\r\n                subtopics: migratedCount.subtopics,\r\n                resources: migratedCount.resources,\r\n                failed: 0\r\n            }\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            message: `Migration failed: ${error instanceof Error ? error.message : 'Unknown error occurred'}`,\r\n            stats: {\r\n                topics: 0,\r\n                subtopics: 0,\r\n                resources: 0,\r\n                failed: 1\r\n            }\r\n        };\r\n    }\r\n}; ","import { Client, Databases, Storage, ID, Models, Query } from 'appwrite';\r\nimport config from '../config/appwrite';\r\nimport { MigrationResult, migrateTopics } from '../utils/appwriteMigration';\r\n\r\nconst client = new Client()\r\n    .setEndpoint(config.endpoint)\r\n    .setProject(config.projectId);\r\n\r\nconst databases = new Databases(client);\r\nconst storage = new Storage(client);\r\n\r\ninterface Topic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n}\r\n\r\ninterface Subtopic extends Models.Document {\r\n    name: string;\r\n    slug: string;\r\n    topicId: string;\r\n}\r\n\r\ninterface Resource extends Models.Document {\r\n    title: string;\r\n    fileId: string;\r\n    subtopicId: string;\r\n    resourceType: 'question' | 'answer' | 'reference' | 'video';\r\n}\r\n\r\nexport const AppwriteService = {\r\n    async getTopics(): Promise<Topic[]> {\r\n        try {\r\n            const response = await databases.listDocuments(\r\n                config.databaseId,\r\n                config.topicsCollectionId\r\n            );\r\n            return response.documents as Topic[];\r\n        } catch (err) {\r\n            console.error('Error fetching topics:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getTopic(topicId: string): Promise<Topic> {\r\n        try {\r\n            const response = await databases.getDocument(\r\n                config.databaseId,\r\n                config.topicsCollectionId,\r\n                topicId\r\n            );\r\n            return response as Topic;\r\n        } catch (err) {\r\n            console.error('Error fetching topic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async createTopic(data: { name: string; slug: string }): Promise<Topic> {\r\n        try {\r\n            const response = await databases.createDocument(\r\n                config.databaseId,\r\n                config.topicsCollectionId,\r\n                ID.unique(),\r\n                data\r\n            );\r\n            return response as Topic;\r\n        } catch (err) {\r\n            console.error('Error creating topic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getSubtopicsByTopic(topicId: string): Promise<Subtopic[]> {\r\n        try {\r\n            const response = await databases.listDocuments(\r\n                config.databaseId,\r\n                config.subtopicsCollectionId,\r\n                [Query.equal('topicId', topicId)]\r\n            );\r\n            return response.documents as Subtopic[];\r\n        } catch (err) {\r\n            console.error('Error fetching subtopics:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getSubtopic(subtopicId: string): Promise<Subtopic> {\r\n        try {\r\n            const response = await databases.getDocument(\r\n                config.databaseId,\r\n                config.subtopicsCollectionId,\r\n                subtopicId\r\n            );\r\n            return response as Subtopic;\r\n        } catch (err) {\r\n            console.error('Error fetching subtopic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async createSubtopic(data: { name: string; slug: string; topicId: string }): Promise<Subtopic> {\r\n        try {\r\n            const response = await databases.createDocument(\r\n                config.databaseId,\r\n                config.subtopicsCollectionId,\r\n                ID.unique(),\r\n                data\r\n            );\r\n            return response as Subtopic;\r\n        } catch (err) {\r\n            console.error('Error creating subtopic:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async getResourcesBySubtopic(subtopicId: string): Promise<Resource[]> {\r\n        try {\r\n            const response = await databases.listDocuments(\r\n                config.databaseId,\r\n                config.resourcesCollectionId,\r\n                [Query.equal('subtopicId', subtopicId)]\r\n            );\r\n            return response.documents as Resource[];\r\n        } catch (err) {\r\n            console.error('Error fetching resources:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async createResource(data: {\r\n        title: string;\r\n        subtopicId: string;\r\n        resourceType: Resource['resourceType'];\r\n        fileId: string;\r\n    }): Promise<Resource> {\r\n        try {\r\n            const response = await databases.createDocument(\r\n                config.databaseId,\r\n                config.resourcesCollectionId,\r\n                ID.unique(),\r\n                data\r\n            );\r\n            return response as Resource;\r\n        } catch (err) {\r\n            console.error('Error creating resource:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async uploadFile(file: File): Promise<string> {\r\n        try {\r\n            const response = await storage.createFile(\r\n                config.bucketId,\r\n                ID.unique(),\r\n                file\r\n            );\r\n            return response.$id;\r\n        } catch (err) {\r\n            console.error('Error uploading file:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    async deleteFile(fileId: string): Promise<void> {\r\n        try {\r\n            await storage.deleteFile(config.bucketId, fileId);\r\n        } catch (err) {\r\n            console.error('Error deleting file:', err);\r\n            throw err;\r\n        }\r\n    },\r\n\r\n    getFileView(fileId: string): string {\r\n        return storage.getFileView(config.bucketId, fileId).toString();\r\n    },\r\n\r\n    async migrateContent(): Promise<MigrationResult> {\r\n        try {\r\n            return await migrateTopics();\r\n        } catch (error) {\r\n            console.error('Migration failed:', error);\r\n            return {\r\n                success: false,\r\n                message: error instanceof Error ? error.message : 'Migration failed',\r\n                stats: {\r\n                    topics: 0,\r\n                    subtopics: 0,\r\n                    resources: 0,\r\n                    failed: 1\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default AppwriteService; "],"names":["SubtopicList","topicId","useParams","topic","setTopic","useState","subtopics","setSubtopics","loading","setLoading","error","setError","useEffect","async","fetchedTopic","fetchedSubtopics","Promise","all","AppwriteService","getTopic","getSubtopicsByTopic","err","console","fetchData","_jsx","className","children","_jsxs","Link","to","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","name","length","map","subtopic","$id","slug","$collectionId","$databaseId","$createdAt","Date","toISOString","$updatedAt","$permissions","config","endpoint","projectId","databaseId","bucketId","topicsCollectionId","subtopicsCollectionId","resourcesCollectionId","client","Client","setEndpoint","setProject","Databases","Storage","databases","storage","getTopics","listDocuments","documents","getDocument","createTopic","data","createDocument","ID","unique","Query","equal","getSubtopic","subtopicId","createSubtopic","getResourcesBySubtopic","createResource","uploadFile","file","createFile","deleteFile","fileId","getFileView","toString","migrateContent","stats","topics","resources","failed","success","message","Error","migrateTopics"],"sourceRoot":""}